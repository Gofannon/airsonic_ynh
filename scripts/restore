#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

#Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	ynh_clean_check_starting
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading settings..." --weight=1

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get --app=$app --key=domain)
path_url=$(ynh_app_setting_get --app=$app --key=path)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)
service_config=$(ynh_app_setting_get --app=$app --key=service_config)

#=================================================
# CHECK IF THE APP CAN BE RESTORED
#=================================================
ynh_script_progression --message="Validating restoration parameters..." --weight=1

ynh_webpath_available --domain=$domain --path_url=$path_url \
	|| ynh_die --message="Path not available: ${domain}${path_url}"
test ! -d $final_path \
	|| ynh_die --message="There is already a directory: $final_path "

#=================================================
# STANDARD RESTORATION STEPS
#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================

ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression --message="Restoring the app main directory..." --weight=1

ynh_restore_file --origin_path="$final_path"

#=================================================
# RECREATE THE DEDICATED USER
#=================================================
ynh_script_progression --message="Recreating the dedicated system user..." --weight=1

# Create the dedicated user (if not existing)
ynh_system_user_create --username=$app

#=================================================
# RESTORE USER RIGHTS
#=================================================

# Restore permissions on app files
chown -R $app: $final_path

#=================================================
# SPECIFIC RESTORATION
#=================================================
# REINSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Reinstalling dependencies..." --weight=43

# Define and install dependencies
ynh_install_app_dependencies $pkg_dependencies

#=================================================
# ENABLE "TRANSCODE"
#=================================================

### For details, see https://airsonic.github.io/docs/transcode/

mkdir -p $final_path/transcode

if [ -x /usr/bin/ffmpeg -a ! -e $final_path/transcode/ffmpeg ]; then   # Check if 'ffmpeg' is installed, executable and that the symlink doesn't exist
	ln -s /usr/bin/ffmpeg $final_path/transcode
fi

# FIXME Not sure if 'lame' is needed ?
if [ -x /usr/bin/lame -a ! -e $final_path/transcode/lame ]; then   # Check if 'lame' is installed, executable and that the symlink doesn't exist
	ln -s /usr/bin/lame $final_path/transcode
fi

# Ensure links belong to the $app user
chown $app: $final_path/transcode

#=================================================
# RESTORE SYSTEMD
#=================================================
ynh_script_progression --message="Restoring the systemd configuration..." --weight=1

ynh_restore_file --origin_path="/etc/systemd/system/$app.service"
ynh_restore_file --origin_path="$service_config"
systemctl enable $app.service

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

yunohost service add $app --description "Airsonic daemon" --log "$final_path/airsonic.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=12

ynh_systemd_action --service_name=$app --action="start" --log_path="$final_path/airsonic.log" --line_match="Started Application in"

#=================================================
# RESTORE THE LOGROTATE CONFIGURATION
#=================================================

ynh_restore_file --origin_path="/etc/logrotate.d/$app"

#=================================================
# RESTORE DATA
#=================================================

# Use --not_mandatory for the data directory, because if the backup has been made with BACKUP_CORE_ONLY, there's no data into the backup.
ynh_restore_file --origin_path="/home/yunohost.airsonic" --not_mandatory

#=================================================
# RESTORE USER RIGHTS
#=================================================

mkdir -p /home/yunohost.airsonic/{Podcasts,Playlists}
chown -R $app:www-data /home/yunohost.airsonic/
chmod -R 764 /home/yunohost.airsonic

#=================================================
# YUNOHOST MULTIMEDIA INTEGRATION
#=================================================
ynh_script_progression --message="Adding multimedia directories..." --weight=3

ynh_multimedia_build_main_dir
ynh_multimedia_addfolder --source_dir="/home/yunohost.airsonic/Podcasts" --dest_dir="share/Podcasts"
ynh_multimedia_addfolder --source_dir="/home/yunohost.airsonic/Playlists" --dest_dir="share/Playlists"
# Allow airsonic to write into these directories
ynh_multimedia_addaccess $app

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX AND PHP-FPM
#=================================================
ynh_script_progression --message="Reloading nginx web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Restoration completed for $app" --last
